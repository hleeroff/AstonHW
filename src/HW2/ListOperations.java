package HW2;

import java.util.Comparator;
/**
 * Интерфейс ListOperations определяет методы для работы с динамическим массивом.
 *
 * Интерфейс включает базовые операции: добавление, удаление,
 * получение элементов, очистка списка и сортировка списка по заданному компаратору.
 *
 * @param <T> тип элементов хранимых в списке
 */
public interface ListOperations<T> {
    /**
     * Добавляет элемент в конец списка.
     *
     * @param element элемент который нужно добавить
     */

    void add(T element);
    /**
     * Добавляет элемент по указанному индексу.
     *
     * @param index   индекс по которому будет добавлен элемент
     * @param element элемент который нужно добавить
     * @throws IndexOutOfBoundsException если индекс выходит за пределы диапазона
     */
    void add(int index, T element);

    /**
     * Получает элемент по указанному индексу.
     *
     * @param index индекс элемента
     * @return элемент по указанному индексу
     * @throws IndexOutOfBoundsException если индекс выходит за пределы диапазона
     */
    T get(int index);

    /**
     * Удаляет элемент по указанному индексу.
     *
     * @param index индекс элемента для удаления
     * @return удаленный элемент
     * @throws IndexOutOfBoundsException если индекс выходит за пределы диапазона
     */
    T remove(int index);

    /**
     * Очищает весь список.
     */
    void clear();

    /**
     * Сортирует список с использованием предоставленного компаратора.
     *
     * @param comparator компаратор для сравнения элементов
     */
    void sort(Comparator<? super T> comparator);

    /**
     * Возвращает количество элементов в списке.
     *
     * @return размер списка
     */
    int size();
}
